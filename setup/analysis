#!/bin/bash

DIR="$(dirname "$0")"
. "${DIR}/config"

set -o errexit
set -o pipefail

# create signing keys in kms
# gcloud kms keyrings create "binauthz" \
#   --project "${PROJECT_ID}" \
#   --location "${REGION}"

# gcloud kms keys create "vulnz-signer" \
#   --project "${PROJECT_ID}" \
#   --location "${REGION}" \
#   --keyring "binauthz" \
#   --purpose "asymmetric-signing" \
#   --default-algorithm "rsa-sign-pkcs1-4096-sha512"

# get the key path 
export KEY_NAME=$(gcloud kms keys describe --keyring=binauthz \
  --location="$REGION" vulnz-signer --format=json \
  | jq --raw-output '.name')

# create vulnerability scanner attestation
# curl "https://containeranalysis.googleapis.com/v1/projects/${PROJECT_ID}/notes/?noteId=vulnz-note" \
#   --request "POST" \
#   --header "Content-Type: application/json" \
#   --header "Authorization: Bearer $(gcloud auth print-access-token)" \
#   --header "X-Goog-User-Project: ${PROJECT_ID}" \
#   --data-binary @- <<EOF
#     {
#       "name": "projects/${PROJECT_ID}/notes/vulnz-note",
#       "attestation": {
#         "hint": {
#           "human_readable_name": "Vulnerability scan note"
#         }
#       }
#     }
# EOF

# get notes resource location 
# export NOTE_LOCATION=$(curl -s "https://containeranalysis.googleapis.com/v1/projects/${PROJECT_ID}/notes/vulnz-note" \
#   --request "GET" \
#   --header "Content-Type: application/json" \
#   --header "Authorization: Bearer $(gcloud auth print-access-token)" \
#   --header "X-Goog-User-Project: ${PROJECT_ID}" \
#   | jq --raw-output '.name')



# curl "https://containeranalysis.googleapis.com/v1/projects/${PROJECT_ID}/notes/vulnz-note:setIamPolicy" \
#   --request POST \
#   --header "Content-Type: application/json" \
#   --header "Authorization: Bearer $(gcloud auth print-access-token)" \
#   --header "X-Goog-User-Project: ${PROJECT_ID}" \
#   --data-binary @- <<EOF
#     {
#       "resource": "projects/${PROJECT_ID}/notes/vulnz-note",
#       "policy": {
#         "bindings": [
#           {
#             "role": "roles/containeranalysis.notes.occurrences.viewer",
#             "members": [
#               "serviceAccount:${CLOUD_BUILD_SA_EMAIL}"
#             ]
#           },
#           {
#             "role": "roles/containeranalysis.notes.attacher",
#             "members": [
#               "serviceAccount:${CLOUD_BUILD_SA_EMAIL}"
#             ]
#           }
#         ]
#       }
#     }
# EOF

# gcloud container binauthz attestors create "vulnz-attestor" \
#   --project "${PROJECT_ID}" \
#   --attestation-authority-note-project "${PROJECT_ID}" \
#   --attestation-authority-note "vulnz-note" \
#   --description "Vulnerability scan attestor"

# gcloud beta container binauthz attestors public-keys add \
#   --project "${PROJECT_ID}" \
#   --attestor "vulnz-attestor" \
#   --keyversion "1" \
#   --keyversion-key "vulnz-signer" \
#   --keyversion-keyring "binauthz" \
#   --keyversion-location "${REGION}" \
#   --keyversion-project "${PROJECT_ID}"

# gcloud container binauthz attestors add-iam-policy-binding "vulnz-attestor" \
#   --project "${PROJECT_ID}" \
#   --member "serviceAccount:${CLOUD_BUILD_SA_EMAIL}" \
#   --role "roles/binaryauthorization.attestorsViewer"

# gcloud kms keys add-iam-policy-binding "vulnz-signer" \
#   --project "${PROJECT_ID}" \
#   --location "${REGION}" \
#   --keyring "binauthz" \
#   --member "serviceAccount:${CLOUD_BUILD_SA_EMAIL}" \
#   --role 'roles/cloudkms.signerVerifier'

# setup policy https://cloud.google.com/binary-authorization/docs/deploy-cloud-build
gcloud container binauthz policy import policy/binauthz/attestor-policy.yaml

# print trigger variables 
cat << EOF
Trigger variables:

_KMS_DIGEST_ALG: SHA512
_KMS_KEY_NAME: ${KEY_NAME}/cryptoKeyVersions/1
_NOTE_NAME: ${NOTE_LOCATION}

To authenticate to GitHub and create repo trigger navigate to:

https://console.cloud.google.com/cloud-build/triggers;region=${REGION}/add?project=${PROJECT_ID}

EOF
